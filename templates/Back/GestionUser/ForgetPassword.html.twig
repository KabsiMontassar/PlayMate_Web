{% extends 'BaseBack.html.twig' %}

{% block title %}Login{% endblock %}
{% block body %}

  <main>
    <div class="container">

      <section class="section register min-vh-100 d-flex flex-column align-items-center justify-content-center py-4">
        <div class="container ">
          <div class="row justify-content-center ">
            <div class="col-lg-8  d-flex flex-column align-items-center justify-content-center ">


         

              
           <div class="card w-75">
    <div class="card-body">
        <h5 class="card-title">Forgot Password</h5>

        <!-- Default Tabs -->
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" disabled id="Email-tab" data-bs-toggle="tab" data-bs-target="#Email" type="button" role="tab" aria-controls="Email" aria-selected="true">Email</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" disabled id="Verification_Code_Validation-tab" data-bs-toggle="tab" data-bs-target="#Verification_Code_Validation" type="button" role="tab" aria-controls="Verification_Code_Validation" aria-selected="false">Verification Code Validation</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" disabled id="Reset_Password-tab" data-bs-toggle="tab" data-bs-target="#Reset_Password" type="button" role="tab" aria-controls="Reset_Password" aria-selected="false">Reset Password</button>
            </li>
        </ul>
        <div class="tab-content pt-2" id="myTabContent">
            <div class="tab-pane fade active show " id="Email" role="tabpanel" aria-labelledby="Email-tab">
               
                    <div class="col-12">
                    <form id="emailForm" method="post" class="row g-3 needs-validation" novalidate>
                        <label class="form-label" for="email">Email</label>
                        <div class="input-group has-validation">
                            <span class="input-group-text" id="inputGroupPrepend">@</span>
                            <input  type="email" class="form-control" id="email" maxlength="50" required>
                            <div class="invalid-feedback">Please enter a valid email address.</div>
                        </div>
                        <div class="d-grid gap-2 col-4 mx-auto mt-2">
                            <button type="submit" class="btn btn-primary" onclick="submitEmailForm()">Verify</button>
                        </div>
                    </form>
                    </div>
               
            </div>

            <div class="tab-pane fade  " id="Verification_Code_Validation" role="tabpanel" aria-labelledby="Verification_Code_Validation-tab">
                <form id="verificationCodeForm" class="row g-3 needs-validation" novalidate>
                    <div class="col-12">
                        <label class="form-label" for="verificationCode">Verification Code</label>
                        <div class="input-group has-validation">
                            <span class="input-group-text" id="inputGroupPrepend">Code</span>
                            <input type="text" class="form-control" id="verificationCode" pattern="^[0-9a-zA-Z]{6}$" maxlength="6" required>
                            <div class="invalid-feedback">Please enter a valid code.</div>
                        </div>
                        <div class="d-grid gap-2 col-4 mx-auto mt-2">
                            <button type="submit"  class="btn btn-primary" onclick="submitVerificationCodeForm()">Verify</button>
                        </div>
                    </div>
                </form>
            </div>

            <div class="tab-pane fade" id="Reset_Password" role="tabpanel" aria-labelledby="Reset_Password-tab">
                <form id="resetPasswordForm" class="row g-3 needs-validation" novalidate>
                    <div class="col-12">
                        <label class="form-label" for="newPassword">New Password</label>
                        <input required type="password" class="form-control" id="newPassword" pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$" maxlength="30" required>
                        <div class="invalid-feedback">Please enter a valid password (at least 8 characters, including uppercase, lowercase, and numbers).</div>
                    </div>
                    <div class="col-12">
                        <label class="form-label" for="confirmPassword">Confirm Password</label>
                        <input type="password" class="form-control" id="confirmPassword" pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$" maxlength="30" required>
                        <div class="invalid-feedback">Please enter a valid password (at least 8 characters, including uppercase, lowercase, and numbers).</div>
                    </div>
                  
                        <button type="submit" class="btn btn-primary" onclick="submitResetPasswordForm()">Submit</button>
                   
                </form>
            </div>
        </div>
    </div>
</div>
<span>You remember your password ? <a href="{{ path('app_login') }}">Login</a></span>

              </div><!-- End Default Tabs -->

            </div>
          </div>
            </div>
          </div>
        </div>

      </section>

    </div>
  </main><!-- End #main -->
<script>
   {# document.addEventListener('DOMContentLoaded', function() {
        var form = document.querySelector('.needs-validation');
        form.addEventListener('submit', function(event) {
            // Remove existing error messages
            form.querySelectorAll('.invalid-feedback').forEach(function(error) {
                error.remove();
            });

            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }

            form.classList.add('was-validated');

        
        });
    }); #}
function switchTab(tabId) {
    var tab = document.querySelector(tabId);
    if (tab) {
        var tabPane = tab.parentNode;
        var tabContainer = tabPane.parentNode;
        var tabs = tabContainer.querySelectorAll('.nav-link');
        tabs.forEach(function(tab) {
            tab.classList.remove('active');
        });
        tab.classList.add('active');

        var tabContentId = tab.getAttribute('data-bs-target');
        var tabContent = document.querySelector(tabContentId);
        if (tabContent) {
            var tabPanes = tabContent.parentNode;
            var activeTabPane = tabPanes.querySelector('.tab-pane.active');
            if (activeTabPane) {
                activeTabPane.classList.remove('active');
                activeTabPane.classList.remove('show');

            }
            tabContent.classList.add('active');
            tabContent.classList.add('show');
        }
    } else {
        console.error('Tab not found:', tabId);
    }
}

function renderFlashMessage(type, message) {
    var alertHTML = '<div class="alert alert-' + type + ' alert-dismissible fade show" role="alert">' +
                        message +
                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>' +
                    '</div>';

    var container = document.querySelector('.col-lg-8');
    container.innerHTML =  alertHTML + container.innerHTML;
}

var userEmail;
var verificationCode;

function submitEmailForm() {
        event.preventDefault(); // Prevent default form submission

        // return if empty 


    userEmail = document.getElementById("email").value;

    if(userEmail === ''){
        renderFlashMessage('warning', 'Email is empty');
        return;
    }

//return if email is not valid 
    if(!userEmail.match(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/)){
        renderFlashMessage('warning', 'Please enter a valid email address');
        return;
    }
    // Perform AJAX post request for email form
    $.post("/user/resetpassword/" + userEmail, function(data) {
        // Handle response
        if (data === 'Verification code sent successfully') {
            switchTab('#Verification_Code_Validation-tab');
        } else {
             renderFlashMessage('danger', data);

        
         }
    });
}

function submitVerificationCodeForm() {
        event.preventDefault(); // Prevent default form submission

 
    verificationCode = document.getElementById("verificationCode").value;
    // Perform AJAX post request for verification code form
    $.post("/user/resetpassword/" + userEmail + "/" + verificationCode, function(data,status) {

        if(verificationCode === ''){
            renderFlashMessage('warning', 'Verification code is empty');
            return;
        }
        
       
       
            if (data === 'Verification successful') {

                switchTab('#Reset_Password-tab');
            }else{
                renderFlashMessage('warning', data);
            }
        
       


        
    });
}

function submitResetPasswordForm() {
        event.preventDefault(); // Prevent default form submission

   
   
    var newPassword = document.getElementById("newPassword").value;
    var confirmPassword = document.getElementById("confirmPassword").value;

   //check if password is empty and if the password matches this pattern ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$' 
   
    if(newPassword === '' || confirmPassword ==='' ){
        renderFlashMessage('warning', 'Password is empty');
        return;
    }
     if(!newPassword.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$/)){
        renderFlashMessage('warning', 'Please enter a valid password (at least 8 characters, including uppercase, lowercase, and numbers)');
        return;
    }

    if(newPassword !== confirmPassword){
        console.log('Passwords do not match')
        renderFlashMessage('warning', 'Passwords do not match');
        return;
    }
    // Perform AJAX post request for reset password form
    $.post("/user/resetpassword/" + userEmail + "/" + verificationCode + "/" + newPassword + "/" + confirmPassword, function(data) {
        // Handle response
       
        if (data === 'Password reset successfully') {
            window.location.href = "/login"; // Redirect to login page
        } else {
            // Display flash message
            renderFlashMessage('danger', data);
        }
    });
}

</script>


{% endblock %}









  
